---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amundsen-frontend
  labels:
    app: amundsen-frontend
    hail.is/sha: "{{ code.sha }}"
spec:
  selector:
    matchLabels:
      app: amundsen-frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: amundsen-frontend
        hail.is/sha: "{{ code.sha }}"
    spec:
{% if deploy %}
      priorityClassName: production
      nodeSelector:
        preemptible: "false"
{% else %}
      nodeSelector:
        preemptible: "true"
      tolerations:
       - key: preemptible
         value: "true"
{% endif %}
      containers:
      - name: amundsen-frontend
        image: {{ global.docker_prefix }}/amundsendev/amundsen-frontend:2.3.0
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "20m"
            memory: "20M"
          limits:
            cpu: "1"
            memory: "1G"
        ports:
          - containerPort: 5000
        env:
{% if deploy %}
          - name: FRONTEND_BASE
            value: https://amundsen-frontend.hail.is
          - name: SEARCHSERVICE_BASE
            value: https://amundsen-search.hail.is
          - name: METADATASERVICE_BASE
            value: https://amundsen-metadata.hail.is
{% else %}
          - name: FRONTEND_BASE
            value: https://internal.hail.is/{{ default_ns.name }}/amundsen-frontend
          - name: SEARCHSERVICE_BASE
            value: https://internal.hail.is/{{ default_ns.name }}/amundsen-search
          - name: METADATASERVICE_BASE
            value: https://internal.hail.is/{{ default_ns.name }}/amundsen-metadata
{% endif %}
          - name: LONG_RANDOM_STRING
            value: 4532y7y2389faehuwfteyw8704y329
        command: ["gunicorn"]
        args: ['-w', '4', '--bind', ':5000', 'amundsen_application.wsgi']
        readinessProbe:
          httpGet:
            path: "/healthcheck"
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: "/healthcheck"
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
